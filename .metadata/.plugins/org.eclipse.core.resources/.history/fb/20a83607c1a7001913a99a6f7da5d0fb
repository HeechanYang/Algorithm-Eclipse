package datastructures.trees;

public class BinarySearchTree {
	private Node root;
	private int size;

	public BinarySearchTree() {
		super();
		this.root = null;
	}

	public void add(int num) {
		Node node = new Node(num);
		if (root == null) {
			this.root = node;
		} else {
			Node current = null;
			Node next = this.root;
			while (true) {
				current = next;
				if (current.data > num) {
					next = current.left;
					if (next == null) {
						current.left = node;
						return;
					}
				} else if (current.data < num) {
					next = current.right;
					if (next == null) {
						current.right = node;
						return;
					}
				} else {
					throw new RuntimeException("Already has same data : " + num);
				}
			}
		}
	}

	class Node {
		private int data;
		private Node left;
		private Node right;

		public Node(int data) {
			super();
			this.data = data;
			this.left = null;
			this.right = null;
		}
	}
}
